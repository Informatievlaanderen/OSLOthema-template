name: Convert the EAP file to JSON-ld

on:
  workflow_dispatch:
    inputs:
      #   uml-file:
      #     description: "Link to the (raw) UML file"
      #     required: true
      #   diagram-name:
      #     description: "Name of the diagram"
      #     required: true
      #     default: "OSLO-Persoon-Basis"
      specification-type:
        description: "Type of the specification: Vocabulary | ApplicationProfile"
        default: "ApplicationProfile"
        required: true
      # version-id:
      #   description: "Version of the specification"
      #   required: true
      #   default: "test/1"
    #   publication-environment:
    #     description: "Publication environment"
    #     required: true
    #     default: "https://data.vlaanderen.be"

jobs:
  convert-eap:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # Different Node versions. Each node version will trigger the action
        node-version:
          - 20.x
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install ea-converter
        run: npm install @oslo-flanders/ea-converter

      - name: Read key from configuration file
        id: read-config
        run: |
          diagram=$(jq -r '.[0].diagram' config/mijn-applicatieprofiel-ap.json)
          echo "diagramName=diagram::$diagram" >> "$GITHUB_OUTPUT"

          uml=$(jq -r '.[0].eap' config/mijn-applicatieprofiel-ap.json)
          echo "umlFile=uml::$uml" "$GITHUB_OUTPUT"

      - name: Run oslo-converter-ea
        run: npx oslo-converter-ea --umlFile ${{ steps.read-config.outputs.umlFile }} --diagramName ${{ steps.read-config.outputs.diagramName }} --specificationType ${{ github.event.inputs.specification-type }} --versionId test/1 --publicationEnvironment https://data.vlaanderen.be
